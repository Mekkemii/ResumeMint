/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ ResumeMint.ru
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Express —Å–µ—Ä–≤–µ—Ä–∞ —Å middleware –∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
 */

const express = require('express');
const cors = require('cors');
const multer = require('multer');
const path = require('path');
const fs = require('fs').promises;
const OpenAI = require('openai');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 5000;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
console.log('=== INITIALIZATION DEBUG ===');
console.log('OPENAI_API_KEY exists:', !!process.env.OPENAI_API_KEY);
console.log('OPENAI_API_KEY length:', process.env.OPENAI_API_KEY ? process.env.OPENAI_API_KEY.length : 0);
console.log('OPENAI_API_KEY start:', process.env.OPENAI_API_KEY ? process.env.OPENAI_API_KEY.substring(0, 10) + '...' : 'none');
console.log('===========================');

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY || 'your-api-key-here'
});

// Middleware
app.use(cors());
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
  destination: async (req, file, cb) => {
    const uploadDir = path.join(__dirname, 'uploads');
    try {
      await fs.mkdir(uploadDir, { recursive: true });
      cb(null, uploadDir);
    } catch (error) {
      cb(error);
    }
  },
  filename: (req, file, cb) => {
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    const ext = path.extname(file.originalname);
    cb(null, `resume-${uniqueSuffix}${ext}`);
  }
});

const fileFilter = (req, file, cb) => {
  const allowedTypes = [
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'application/msword',
    'text/plain',
    'application/pdf'
  ];
  
  if (allowedTypes.includes(file.mimetype)) {
    cb(null, true);
  } else {
    cb(new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: .docx, .doc, .txt, .pdf'), false);
  }
};

const upload = multer({
  storage: storage,
  fileFilter: fileFilter,
  limits: {
    fileSize: 10 * 1024 * 1024,
    files: 1
  }
});

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
async function extractTextFromFile(file) {
  const filePath = file.path;
  const ext = path.extname(file.originalname).toLowerCase();
  
  if (ext === '.txt') {
    return await fs.readFile(filePath, 'utf8');
  } else if (ext === '.pdf') {
    // –î–ª—è PDF –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É, —Ç–∞–∫ –∫–∞–∫ –Ω—É–∂–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ pdf-parse
    return `[PDF —Ñ–∞–π–ª: ${file.originalname}] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF —Ñ–∞–π–ª–∞ –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.`;
  } else if (ext === '.docx' || ext === '.doc') {
    // –î–ª—è Word —Ñ–∞–π–ª–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    return `[Word —Ñ–∞–π–ª: ${file.originalname}] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ Word —Ñ–∞–π–ª–∞ –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.`;
  }
  
  return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞';
}

// –§—É–Ω–∫—Ü–∏—è AI –∞–Ω–∞–ª–∏–∑–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI
async function analyzeResumeWithAI(resumeText, questions = {}) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ API –∫–ª—é—á
    console.log('=== API KEY DEBUG ===');
    console.log('API Key exists:', !!process.env.OPENAI_API_KEY);
    console.log('API Key length:', process.env.OPENAI_API_KEY ? process.env.OPENAI_API_KEY.length : 0);
    console.log('API Key start:', process.env.OPENAI_API_KEY ? process.env.OPENAI_API_KEY.substring(0, 15) + '...' : 'none');
    console.log('====================');
    
    if (!process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY === 'your-openai-api-key-here' || process.env.OPENAI_API_KEY.length < 20) {
      console.log('‚ùå OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π');
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑...');
      return performLocalAnalysis(resumeText, questions);
    }
    
    console.log('‚úÖ OpenAI API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º API');
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI API...');

    const systemPrompt = `–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–∑—é–º–µ, ATS-—Å–∏—Å—Ç–µ–º–∞–º –∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –≤ IT-—Å—Ñ–µ—Ä–µ.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ –∏ –¥–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.

–ê–ª–≥–æ—Ä–∏—Ç–º –∞–Ω–∞–ª–∏–∑–∞:

1. –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –†–ï–ó–Æ–ú–ï
- –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ç–µ–ª–µ—Ñ–æ–Ω, email, LinkedIn)
- –¶–µ–ª—å/–∂–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å
- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (—Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—è, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏)
- –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
- –ù–∞–≤—ã–∫–∏ (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏ soft skills)
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

2. –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –£–†–û–í–ù–Ø –ö–ê–ù–î–ò–î–ê–¢–ê
- Junior (0-2 –≥–æ–¥–∞): –±–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º
- Middle (2-5 –ª–µ—Ç): —É–≤–µ—Ä–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π, –ø–æ–º–æ—â—å –∫–æ–ª–ª–µ–≥–∞–º
- Senior (5-8 –ª–µ—Ç): –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ
- Lead/Expert (8+ –ª–µ—Ç): —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥–∞–º–∏, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è

3. ATS-–°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

4. HR-–°–¢–ê–ù–î–ê–†–¢–´ 2024
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏
- –£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
- –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ–ø—ã—Ç
- Soft skills

–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—é–º–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –∏ –¥–∞–≤–∞–π –æ—Ç–≤–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

# –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ

## 1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
[–û—Ü–µ–Ω–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ —Ä–µ–∑—é–º–µ]

## 2. –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å ATS
[–û—Ü–µ–Ω–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–¥ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–±–æ—Ä–∞]

## 3. –ê–Ω–∞–ª–∏–∑ –ø–æ HR-—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º
[–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º HR]

## 4. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
[–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤]

## –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
- ‚úÖ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
- ‚ö†Ô∏è –ù–µ–¥–æ—á–µ—Ç—ã  
- üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é

–í –∫–æ–Ω—Ü–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞–π JSON —Å –∫—Ä–∞—Ç–∫–æ–π –æ—Ü–µ–Ω–∫–æ–π:
{
  "grade": "Junior/Middle/Senior/Lead/Expert",
  "atsScore": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100,
  "skills": ["–Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏"],
  "recommendations": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"],
  "strongPoints": ["—Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã"],
  "weakPoints": ["—Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã"]
}`;

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
    let additionalInfo = '';
    if (questions && Object.keys(questions).length > 0) {
      additionalInfo = '\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:\n';
      if (questions.desiredPosition) additionalInfo += `- –ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ${questions.desiredPosition}\n`;
      if (questions.experienceYears) additionalInfo += `- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: ${questions.experienceYears}\n`;
      if (questions.englishLevel) additionalInfo += `- –£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ: ${questions.englishLevel}\n`;
      if (questions.desiredSalary) additionalInfo += `- –ñ–µ–ª–∞–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ${questions.desiredSalary} —Ä—É–±/–º–µ—Å\n`;
      if (questions.relocation) additionalInfo += `- –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–µ—Ä–µ–µ–∑–¥—É: ${questions.relocation}\n`;
    }

    const userPrompt = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–µ–µ —Ä–µ–∑—é–º–µ:

${resumeText}${additionalInfo}

–î–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏ JSON —Å –æ—Ü–µ–Ω–∫–æ–π. –£—á–∏—Ç—ã–≤–∞–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –≥—Ä–µ–π–¥–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.`;

    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userPrompt }
      ],
      temperature: 0.3,
      max_tokens: 3000
    });

    const response = completion.choices[0].message.content;
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
    const jsonMatch = response.match(/\{[\s\S]*\}/);
    if (jsonMatch) {
      try {
        const jsonData = JSON.parse(jsonMatch[0]);
        return {
          ...jsonData,
          detailedAnalysis: response.replace(jsonMatch[0], '').trim()
        };
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', e);
      }
    }
    
    // –ï—Å–ª–∏ JSON –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    return {
      grade: '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω',
      atsScore: 60,
      skills: [],
      recommendations: ['–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞'],
      strongPoints: [],
      weakPoints: [],
      detailedAnalysis: response
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ OpenAI API:', error.message);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ API
    console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ API');
    return performLocalAnalysis(resumeText, questions);
  }
}

// –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ (–±–µ–∑ OpenAI)
function performLocalAnalysis(resumeText, questions = {}) {
  const text = resumeText.toLowerCase();
  
  let level = 'Junior';
  let score = 60;
  const skills = [];
  const recommendations = [];
  const strongPoints = [];
  const weakPoints = [];
  
  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –ø–æ –Ω–æ–≤—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º (—Å —É—á–µ—Ç–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤)
  if (questions.experienceYears) {
    if (questions.experienceYears === '8+') {
      level = 'Lead/Expert';
      score += 25;
    } else if (questions.experienceYears === '5-8') {
      level = 'Senior';
      score += 20;
    } else if (questions.experienceYears === '3-5' || questions.experienceYears === '2-3') {
      level = 'Middle';
      score += 15;
    } else {
      level = 'Junior';
      score += 10;
    }
  } else {
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–µ–∫—Å—Ç—É —Ä–µ–∑—é–º–µ
    if (text.includes('8 –ª–µ—Ç') || text.includes('–±–æ–ª–µ–µ 8') || text.includes('expert') || text.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å') || text.includes('team lead') || text.includes('–¥–∏—Ä–µ–∫—Ç–æ—Ä')) {
      level = 'Lead/Expert';
      score += 25;
    } else if (text.includes('5 –ª–µ—Ç') || text.includes('–±–æ–ª–µ–µ 5') || text.includes('senior') || text.includes('–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä') || text.includes('–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ') || text.includes('–≤–µ–¥—É—â–∏–π')) {
      level = 'Senior';
      score += 20;
    } else if (text.includes('3 –≥–æ–¥–∞') || text.includes('4 –≥–æ–¥–∞') || text.includes('middle') || text.includes('–æ–ø—ã—Ç 3') || text.includes('–æ–ø—ã—Ç 4')) {
      level = 'Middle';
      score += 15;
    } else if (text.includes('1 –≥–æ–¥') || text.includes('2 –≥–æ–¥–∞') || text.includes('junior') || text.includes('–æ–ø—ã—Ç 1') || text.includes('–æ–ø—ã—Ç 2')) {
      level = 'Junior';
      score += 10;
    }
  }
  
  // –ü–æ–∏—Å–∫ –Ω–∞–≤—ã–∫–æ–≤ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ)
  const skillKeywords = [
    // IT –Ω–∞–≤—ã–∫–∏
    'react', 'javascript', 'typescript', 'node.js', 'python', 'java', 'c++', 'c#',
    'html', 'css', 'sql', 'mongodb', 'postgresql', 'docker', 'kubernetes', 'aws',
    'git', 'agile', 'scrum', 'figma', 'photoshop', 'illustrator',
    // –ë–∏–∑–Ω–µ—Å –Ω–∞–≤—ã–∫–∏
    'excel', 'powerpoint', 'word', 'power bi', 'tableau', 'salesforce', 'crm',
    '–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–ø—Ä–æ–¥–∞–∂–∏', '–∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '—Ñ–∏–Ω–∞–Ω—Å—ã', '–±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è', 'hr',
    // –Ø–∑—ã–∫–∏
    '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', 'english', '–Ω–µ–º–µ—Ü–∫–∏–π', '—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π', '–∫–∏—Ç–∞–π—Å–∫–∏–π',
    // –î—Ä—É–≥–∏–µ
    'osint', 'kyc', 'aml', '–ø—Ä–æ–µ–∫—Ç', '–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', '–ª–∏–¥–µ—Ä—Å—Ç–≤–æ'
  ];
  
  skillKeywords.forEach(skill => {
    if (text.includes(skill)) {
      skills.push(skill.charAt(0).toUpperCase() + skill.slice(1));
    }
  });
  
  // –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  if (text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || text.includes('email') || text.includes('–∫–æ–Ω—Ç–∞–∫—Ç')) {
    strongPoints.push('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω—ã');
  } else {
    weakPoints.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  }
  
  if (text.includes('–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã') || text.includes('–º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã')) {
    strongPoints.push('–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω');
  } else {
    weakPoints.push('–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –Ω–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω');
  }
  
  if (text.includes('–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')) {
    strongPoints.push('–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É–∫–∞–∑–∞–Ω–æ');
  } else {
    weakPoints.push('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  if (text.includes('–Ω–∞–≤—ã–∫–∏') || text.includes('skills')) {
    strongPoints.push('–ù–∞–≤—ã–∫–∏ –≤—ã–¥–µ–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º –±–ª–æ–∫–æ–º');
  } else {
    weakPoints.push('–ù–∞–≤—ã–∫–∏ –Ω–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã');
  }
  
  // –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  if (text.includes('%') || text.includes('–ø—Ä–æ—Ü–µ–Ω—Ç') || text.includes('—É–≤–µ–ª–∏—á–∏–ª') || text.includes('—Å–Ω–∏–∑–∏–ª')) {
    strongPoints.push('–ï—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏');
  } else {
    weakPoints.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏');
  }
  
  // –ê–Ω–∞–ª–∏–∑ —è–∑—ã–∫–æ–≤ (—Å —É—á–µ—Ç–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤)
  if (questions.englishLevel) {
    strongPoints.push(`–£–∫–∞–∑–∞–Ω —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞: ${questions.englishLevel}`);
    if (questions.englishLevel === 'C1' || questions.englishLevel === 'C2') {
      score += 15;
    } else if (questions.englishLevel === 'B2') {
      score += 10;
    } else if (questions.englishLevel === 'B1') {
      score += 5;
    }
  } else if (text.includes('–∞–Ω–≥–ª–∏–π—Å–∫–∏–π') || text.includes('english')) {
    strongPoints.push('–£–∫–∞–∑–∞–Ω —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞');
  } else {
    weakPoints.push('–ù–µ —É–∫–∞–∑–∞–Ω —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞');
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (—Å —É—á–µ—Ç–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤)
  if (questions.desiredPosition) {
    strongPoints.push(`–£–∫–∞–∑–∞–Ω–∞ –∂–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ${questions.desiredPosition}`);
    score += 5;
  }
  
  if (questions.desiredSalary) {
    strongPoints.push(`–£–∫–∞–∑–∞–Ω–∞ –∂–µ–ª–∞–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ${questions.desiredSalary} —Ä—É–±/–º–µ—Å`);
    score += 5;
  }
  
  if (questions.relocation) {
    const relocationText = questions.relocation === 'yes' ? '–≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–µ–∑–¥—É' : 
                          questions.relocation === 'no' ? '–Ω–µ –≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–µ–∑–¥—É' : 
                          '—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø–µ—Ä–µ–µ–∑–¥—É';
    strongPoints.push(`–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–µ—Ä–µ–µ–∑–¥—É: ${relocationText}`);
  }
  
  if (text.length < 200) {
    recommendations.push('–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã');
  }
  if (!text.includes('–æ–ø—ã—Ç')) {
    recommendations.push('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã');
  }
  if (!text.includes('–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')) {
    recommendations.push('–î–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏');
  }
  if (skills.length < 3) {
    recommendations.push('–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤');
  }
  if (!text.includes('–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')) {
    recommendations.push('–î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏');
  }
  
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ü–µ–Ω–∫—É –∑–∞ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  if (text.includes('–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã')) score += 10;
  if (text.includes('–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')) score += 10;
  if (text.includes('–Ω–∞–≤—ã–∫–∏')) score += 10;
  if (text.includes('–ø—Ä–æ–µ–∫—Ç')) score += 5;
  if (text.includes('–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')) score += 10;
  
  // –î–ª—è –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤ —Å–Ω–∏–∂–∞–µ–º –æ—Ü–µ–Ω–∫—É
  if (text.length < 50) {
    score = Math.max(score - 30, 10); // –ú–∏–Ω–∏–º—É–º 10%
  } else if (text.length < 100) {
    score = Math.max(score - 20, 20); // –ú–∏–Ω–∏–º—É–º 20%
  }
  
  score = Math.min(score, 100);
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
  const detailedAnalysis = generateDetailedAnalysis(resumeText, level, score, skills, strongPoints, weakPoints, recommendations);
  
  return {
    grade: level,
    atsScore: score,
    skills: skills,
    recommendations: recommendations,
    strongPoints: strongPoints,
    weakPoints: weakPoints,
    detailedAnalysis: detailedAnalysis
  };
}

function generateDetailedAnalysis(resumeText, level, score, skills, strongPoints, weakPoints, recommendations) {
  const text = resumeText.toLowerCase();
  
  let analysis = `# –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ\n\n`;
  
  // 1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
  analysis += `## 1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\n`;
  
  if (text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || text.includes('email')) {
    analysis += `–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') && text.includes('email') ? '–ü–æ–ª–Ω—ã–µ' : '–ß–∞—Å—Ç–∏—á–Ω–æ —É–∫–∞–∑–∞–Ω—ã'}, –≤–∫–ª—é—á–∞—é—Ç ${text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') ? '—Ç–µ–ª–µ—Ñ–æ–Ω' : ''}${text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') && text.includes('email') ? ', ' : ''}${text.includes('email') ? 'email' : ''} ‚Äî ${text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') && text.includes('email') ? '–æ—Ç–ª–∏—á–Ω–æ' : '—Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è'}.\n\n`;
  } else {
    analysis += `–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç ‚Äî –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è HR.\n\n`;
  }
  
  if (text.includes('—Ü–µ–ª—å') || text.includes('–¥–æ–ª–∂–Ω–æ—Å—Ç—å')) {
    analysis += `–¶–µ–ª—å / –ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ${text.includes('—Ü–µ–ª—å') ? '–£–∫–∞–∑–∞–Ω–∞' : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'} ‚Äî ${text.includes('—Ü–µ–ª—å') ? '—Ö–æ—Ä–æ—à–æ' : '–Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å'}.\n\n`;
  } else {
    analysis += `–¶–µ–ª—å / –ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å: –ù–µ —É–∫–∞–∑–∞–Ω–∞ ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å.\n\n`;
  }
  
  if (text.includes('–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã')) {
    analysis += `–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: ${text.includes('–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã') ? '–ü—Ä–∏–≤–µ–¥–µ–Ω' : '–ù–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω'}. ${text.includes('–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è') ? '–ï—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π' : '–ù–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π'}.\n\n`;
  } else {
    analysis += `–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: –ù–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω ‚Äî –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.\n\n`;
  }
  
  if (text.includes('–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')) {
    analysis += `–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –£–∫–∞–∑–∞–Ω–æ ‚Äî —Ö–æ—Ä–æ—à–æ –¥–ª—è HR-–æ—Ü–µ–Ω–∫–∏.\n\n`;
  } else {
    analysis += `–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –ù–µ —É–∫–∞–∑–∞–Ω–æ ‚Äî –º–æ–∂–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —à–∞–Ω—Å—ã.\n\n`;
  }
  
  if (skills.length > 0) {
    analysis += `–ù–∞–≤—ã–∫–∏: –í—ã–¥–µ–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º –±–ª–æ–∫–æ–º (${skills.join(', ')}).\n\n`;
  } else {
    analysis += `–ù–∞–≤—ã–∫–∏: –ù–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–µ–ª–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º –±–ª–æ–∫–æ–º.\n\n`;
  }
  
  // 2. –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å ATS
  analysis += `## 2. –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å ATS\n`;
  analysis += `–§–æ—Ä–º–∞—Ç —Ä–µ–∑—é–º–µ: ${text.includes('pdf') ? 'PDF —Ñ–æ—Ä–º–∞—Ç' : '–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç'} ‚Äî ${text.includes('pdf') ? '—Ö–æ—Ä–æ—à–æ –¥–ª—è ATS' : '–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è ATS'}.\n\n`;
  
  if (text.includes('—Ç–∞–±–ª–∏—Ü–∞') || text.includes('–≥—Ä–∞—Ñ–∏–∫')) {
    analysis += `–í–Ω–∏–º–∞–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∏–ª–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –º–æ–∂–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ATS.\n\n`;
  } else {
    analysis += `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–ª–æ–∂–Ω—ã–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã ‚Äî –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è ATS.\n\n`;
  }
  
  if (skills.length > 0) {
    analysis += `–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${skills.length} —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ ‚Äî ${skills.length >= 5 ? '—Ö–æ—Ä–æ—à–æ' : '–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ'}.\n\n`;
  } else {
    analysis += `–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ ‚Äî –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è ATS.\n\n`;
  }
  
  // 3. –ê–Ω–∞–ª–∏–∑ –ø–æ HR-—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º
  analysis += `## 3. –ê–Ω–∞–ª–∏–∑ –ø–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º HR-—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º (2024-2025)\n`;
  
  if (text.includes('%') || text.includes('–ø—Ä–æ—Ü–µ–Ω—Ç')) {
    analysis += `–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏: –ï—Å—Ç—å ‚Äî –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è HR.\n\n`;
  } else {
    analysis += `–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å.\n\n`;
  }
  
  if (text.includes('–∞–Ω–≥–ª–∏–π—Å–∫–∏–π') || text.includes('english')) {
    analysis += `–£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ: –£–∫–∞–∑–∞–Ω ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º.\n\n`;
  } else {
    analysis += `–£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ: –ù–µ —É–∫–∞–∑–∞–Ω ‚Äî –º–æ–∂–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —à–∞–Ω—Å—ã.\n\n`;
  }
  
  if (text.includes('–æ–ø—ã—Ç') && (text.includes('3') || text.includes('4') || text.includes('5'))) {
    analysis += `–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ–ø—ã—Ç: –ï—Å—Ç—å ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Ä—ã–Ω–∫–∞.\n\n`;
  } else {
    analysis += `–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ–ø—ã—Ç: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.\n\n`;
  }
  
  // 4. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
  analysis += `## 4. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞\n`;
  
  let experienceYears = 0;
  if (text.includes('5 –ª–µ—Ç') || text.includes('–±–æ–ª–µ–µ 5')) experienceYears = 5;
  else if (text.includes('4 –≥–æ–¥–∞') || text.includes('4 –ª–µ—Ç')) experienceYears = 4;
  else if (text.includes('3 –≥–æ–¥–∞') || text.includes('3 –ª–µ—Ç')) experienceYears = 3;
  else if (text.includes('2 –≥–æ–¥–∞') || text.includes('2 –ª–µ—Ç')) experienceYears = 2;
  else if (text.includes('1 –≥–æ–¥') || text.includes('1 –ª–µ—Ç')) experienceYears = 1;
  
  analysis += `–û–ø—ã—Ç: ${experienceYears > 0 ? experienceYears + ' –ª–µ—Ç' : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
  analysis += `–ù–∞–≤—ã–∫–∏: ${skills.length} –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤\n`;
  analysis += `–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${text.includes('–ø—Ä–æ–µ–∫—Ç') ? '–ï—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã' : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
  analysis += `–°–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—á: ${text.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å') ? '–í—ã—Å–æ–∫–∞—è' : text.includes('middle') ? '–°—Ä–µ–¥–Ω—è—è' : '–ë–∞–∑–æ–≤–∞—è'}\n`;
  analysis += `–£—Ä–æ–≤–µ–Ω—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏: ${text.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å') ? '–í—ã—Å–æ–∫–∏–π' : text.includes('–ø—Ä–æ–µ–∫—Ç') ? '–°—Ä–µ–¥–Ω–∏–π' : '–ë–∞–∑–æ–≤—ã–π'}\n\n`;
  
  analysis += `–û—Ü–µ–Ω–∫–∞:\n`;
  analysis += `[${level}] ‚Äî ${level === 'Lead/Expert' ? '8+ –ª–µ—Ç –æ–ø—ã—Ç–∞, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥–∞–º–∏, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è' : level === 'Senior' ? '5-8 –ª–µ—Ç –æ–ø—ã—Ç–∞, –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ' : level === 'Middle' ? '2-5 –ª–µ—Ç –æ–ø—ã—Ç–∞, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π' : '0-2 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞, –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ'}.\n\n`;
  
  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  analysis += `## –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç\n`;
  
  if (strongPoints.length > 0) {
    analysis += `–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã ‚úÖ\n`;
    strongPoints.forEach(point => {
      analysis += `${point}\n`;
    });
    analysis += `\n`;
  }
  
  if (weakPoints.length > 0) {
    analysis += `–ù–µ–¥–æ—á–µ—Ç—ã ‚ö†Ô∏è\n`;
    weakPoints.forEach(point => {
      analysis += `${point}\n`;
    });
    analysis += `\n`;
  }
  
  if (recommendations.length > 0) {
    analysis += `–ß—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å üîß\n`;
    recommendations.forEach(rec => {
      analysis += `${rec}\n`;
    });
    analysis += `\n`;
  }
  
  analysis += `–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:\n`;
  analysis += `[${level}] ‚Äî –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: ${level === 'Lead/Expert' ? '8+ –ª–µ—Ç –æ–ø—ã—Ç–∞, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥–∞–º–∏, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è' : level === 'Senior' ? '5-8 –ª–µ—Ç –æ–ø—ã—Ç–∞, –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ' : level === 'Middle' ? '2-5 –ª–µ—Ç –æ–ø—ã—Ç–∞, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π' : '0-2 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞, –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ'}.\n\n`;
  
  analysis += `ATS-–æ—Ü–µ–Ω–∫–∞: ${score}/100 ‚Äî ${score >= 80 ? '–û—Ç–ª–∏—á–Ω–æ' : score >= 60 ? '–•–æ—Ä–æ—à–æ' : '–¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏'}.\n`;
  
  return analysis;
}


// API endpoints
app.post('/api/resume/upload', upload.single('resume'), async (req, res) => {
  try {
    if (!req.file) {
      return res.status(400).json({
        success: false,
        error: { message: '–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω' }
      });
    }
    
    console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞:', req.file.originalname);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞
    const resumeText = await extractTextFromFile(req.file);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ
    const analysisResult = await analyzeResumeWithAI(resumeText);
    
    res.json({
      success: true,
      message: '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ',
      data: analysisResult
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞:', error);
    res.status(500).json({
      success: false,
      error: { message: error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞' }
    });
  }
});

app.post('/api/resume/analyze-text', async (req, res) => {
  try {
    const { resumeText, questions } = req.body;
    
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞, –¥–ª–∏–Ω–∞:', resumeText ? resumeText.length : 0);
    console.log('–î–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å–æ–≤:', questions);
    
    if (!resumeText || resumeText.trim().length < 10) {
      console.log('–¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π:', resumeText);
      return res.status(400).json({
        success: false,
        error: { message: '–¢–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.' }
      });
    }
    
    console.log('–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∑—é–º–µ, –¥–ª–∏–Ω–∞:', resumeText.trim().length);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ —Å —É—á–µ—Ç–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
    const analysisResult = await analyzeResumeWithAI(resumeText.trim(), questions);
    
    res.json({
      success: true,
      message: '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ',
      data: analysisResult
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç–µ–∫—Å—Ç–∞:', error);
    res.status(500).json({
      success: false,
      error: { message: error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∑—é–º–µ' }
    });
  }
});

// Health check
app.get('/api/health', (req, res) => {
  res.json({
    status: 'OK',
    timestamp: new Date().toISOString(),
    service: 'ResumeMint API',
    version: '1.0.0'
  });
});

// 404 handler
app.use('*', (req, res) => {
  res.status(404).json({
    error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    code: 'ROUTE_NOT_FOUND',
    path: req.originalUrl
  });
});

// Error handler
app.use((error, req, res, next) => {
  console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  res.status(500).json({
    success: false,
    error: { message: error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üöÄ ResumeMint API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api`);
});

module.exports = app;
